[{"C:\\Users\\Ian\\My Projects\\portfolio\\src\\index.js":"1","C:\\Users\\Ian\\My Projects\\portfolio\\src\\App.js":"2","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Rainbow.js":"3","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Pyramid.js":"4","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Stars.js":"5","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Effect.js":"6","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Navbar.js":"7","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\HeaderText.js":"8","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Light.js":"9","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\HoverContext.js":"10"},{"size":141,"mtime":1609806423253,"results":"11","hashOfConfig":"12"},{"size":41529,"mtime":1609806401295,"results":"13","hashOfConfig":"12"},{"size":1684,"mtime":1609730389937,"results":"14","hashOfConfig":"12"},{"size":1135,"mtime":1609778816099,"results":"15","hashOfConfig":"12"},{"size":1219,"mtime":1609722855249,"results":"16","hashOfConfig":"12"},{"size":2283,"mtime":1609806423242,"results":"17","hashOfConfig":"12"},{"size":1056,"mtime":1609771061845,"results":"18","hashOfConfig":"12"},{"size":1830,"mtime":1609804641369,"results":"19","hashOfConfig":"12"},{"size":391,"mtime":1609730339881,"results":"20","hashOfConfig":"12"},{"size":95,"mtime":1608961798881,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1wikbo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ian\\My Projects\\portfolio\\src\\index.js",[],["45","46"],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\App.js",[],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Rainbow.js",[],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Pyramid.js",["47","48"],"import React, {useCallback, useContext, useRef, useState} from \"react\"\r\nimport Context from \"./HoverContext\"\r\n\r\nfunction useHover() {\r\n    const ref = useRef()\r\n    const setHovered = useContext(Context);\r\n    const onPointerOver = useCallback(() => setHovered(state => [...state, ref.current]), []);\r\n    const onPointerOut = useCallback(() => setHovered(state => state.filter(mesh => mesh !== ref.current)), []);\r\n\r\n    return {ref, onPointerOver, onPointerOut}\r\n}\r\n\r\nfunction Pyramid() {\r\n    const [onPress, setPress] = useState(false);\r\n\r\n    return (\r\n        <mesh\r\n            visible\r\n            rotation={[0.5, -0.4, -0.5]}\r\n            position={[0, 0, 0]}\r\n            scale={[2.5, 2.5, 2.5]}\r\n            onClick={() => setPress(!onPress)}\r\n            userData={onPress}\r\n            {...useHover()}\r\n        >\r\n            <tetrahedronBufferGeometry attach=\"geometry\"/>\r\n            <meshStandardMaterial\r\n                opacity={0.1}\r\n                attach=\"material\"\r\n                color=\"gray\"\r\n                roughness={0.2}\r\n                metalness={1}/>\r\n        </mesh>\r\n    )\r\n}\r\n\r\nexport default Pyramid","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Stars.js",["49"],"import * as THREE from 'three/src/Three'\r\nimport React, {useMemo, useRef} from 'react'\r\nimport {useFrame} from 'react-three-fiber'\r\n\r\nfunction Stars({count}) {\r\n    let group = useRef()\r\n    let theta = 0\r\n    useFrame(() => {\r\n        // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\r\n        const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.05)))\r\n        const s = Math.cos(THREE.Math.degToRad(theta * 1.5))\r\n        group.current.rotation.set(r, r, r)\r\n        group.current.scale.set(s, s, s)\r\n    })\r\n    const [geo, mat, coords] = useMemo(() => {\r\n        const geo = new THREE.SphereBufferGeometry(0.8, 10, 10)\r\n        const mat = new THREE.MeshBasicMaterial({color: new THREE.Color('lightblue' || 'yellow')})\r\n        const coords = new Array(count).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\r\n        return [geo, mat, coords]\r\n    }, [])\r\n    return (\r\n        <group ref={group}>\r\n            {coords.map(([p1, p2, p3], i) => (\r\n                <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]}/>\r\n            ))}\r\n        </group>\r\n    )\r\n}\r\n\r\nexport default Stars","C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Effect.js",[],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Navbar.js",[],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\HeaderText.js",[],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\Light.js",[],"C:\\Users\\Ian\\My Projects\\portfolio\\src\\components\\HoverContext.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":7,"column":91,"nodeType":"56","endLine":7,"endColumn":93,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":109,"nodeType":"56","endLine":8,"endColumn":111,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"59","line":20,"column":8,"nodeType":"56","endLine":20,"endColumn":10,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setHovered'. Either include it or remove the dependency array.","ArrayExpression",["63"],["64"],"React Hook useMemo has a missing dependency: 'count'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"66","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [setHovered]",{"range":"71","text":"72"},{"range":"73","text":"72"},"Update the dependencies array to be: [count]",{"range":"74","text":"75"},[296,298],"[setHovered]",[410,412],[969,971],"[count]"]